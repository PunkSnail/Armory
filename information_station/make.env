
ALLDIRS:=$(basename $(patsubst ./%,%,$(shell find -maxdepth 1 -type d)))

MAINDIR:=$(findstring main,$(ALLDIRS))
SUBDIRS:=$(filter-out $(EXCLUDE_DIRS) main, $(ALLDIRS)) $(MAINDIR)

ifeq ($(CC), gcc)
	suffix=.c
else
	suffix=.cpp
endif

# string substitution, for example: func.c > func.o
OBJS:=$(patsubst %$(suffix), %.o, $(wildcard *$(suffix)))

all:$(TARGET) $(LIB) subdirs

subdirs:$(SUBDIRS)
	@for dir in $(SUBDIRS); do $(MAKE) -C $$dir all || exit 1; done

$(TARGET):$(OBJS) $(TARGET_LIBS)
	@$(CC) $^ -o $@ $(CFLAGS) $(LDFLAGS)
	@$(if $(EXEPATH), mv $@ $(EXEPATH))

$(LIB):$(OBJS)
	@$(CC) -shared $^ -o $@ -fPIC $(CFLAGS) $(LDFLAGS)
	@$(if $(LIBPATH), mv $@ $(LIBPATH))

%.o:%$(suffix)
	@$(CC) $< -o $@ -fPIC -c $(CFLAGS)
	@$(if $<, /bin/echo -e "\033[32mCompiling $< \033[0m")

clean:
	@for dir in $(SUBDIRS); do $(MAKE) -C $$dir clean || exit 1; done
	@rm -rf $(TARGET) $(LIB) $(OBJS)
	@$(if $(notdir $(LIBPATH)$(LIB)), rm -rf $(LIBPATH)$(LIB))
	@$(if $(notdir $(EXEPATH)$(TARGET)), rm -rf $(EXEPATH)$(TARGET))

.PHONY: all clean
